---
# tasks file for vmware_vm_manager

# - name: "DEBUG vars block"
#   block:
#     - name: "Print vars"
#       ansible.builtin.debug:
#         msg:
#           - "vmware_vm_manager_hostname: {{ vmware_vm_manager_hostname | default(lookup('ansible.builtin.env', 'VMWARE_HOST')) }}"
#           - "vmware_vm_manager_username: {{ vmware_vm_manager_username | default(lookup('ansible.builtin.env', 'VMWARE_USER')) }}"
#           - "vmware_vm_manager_port: {{ vmware_vm_manager_port | default(lookup('ansible.builtin.env', 'VMWARE_PORT')) }}"
#           - "vmware_vm_manager_validate_certs: {{ vmware_vm_manager_validate_certs | default(lookup('ansible.builtin.env', 'VMWARE_VALIDATE_CERTS')) }}"
#           - "vmware_vm_manager_proxy_host: {{ vmware_vm_manager_proxy_host | default(lookup('ansible.builtin.env', 'VMWARE_PROXY_HOST')) }}"
#           - "vmware_vm_manager_proxy_port: {{ vmware_vm_manager_proxy_port | default(lookup('ansible.builtin.env', 'VMWARE_PROXY_PORT')) | int }}"
#           - "vmware_vm_manager_datacenter: {{ vmware_vm_manager_datacenter | mandatory }}"
#           - "vmware_vm_manager_cluster: {{ vmware_vm_manager_cluster if vmware_vm_manager_cluster is defined and \
#                                            vmware_vm_manager_esxi_hostname is not defined else omit }}"
#           - "vmware_vm_manager_esxi_hostname: {{ vmware_vm_manager_esxi_hostname if vmware_vm_manager_esxi_hostname is defined and \
#                                                  mware_vm_manager_cluster is not defined else omit }}"
#           - "vmware_vm_manager_datastore: {{ vmware_vm_manager_datastore if vmware_vm_manager_datastore is defined else omit }}"
#           - "vmware_vm_manager_folder: {{ vmware_vm_manager_folder if vmware_vm_manager_folder is defined else omit }}"
#           - "vmware_vm_manager_name: {{ vmware_vm_manager_name | mandatory }}"
#           - "vmware_vm_manager_annotation: {{ vmware_vm_manager_annotation | default(omit) }}"
#           - "vmware_vm_manager_state: {{ vmware_vm_manager_state | default(omit) }}"
#           - "vmware_vm_manager_template: {{ vmware_vm_manager_template if vmware_vm_manager_template is defined else omit }}"
#           - "vmware_vm_manager_disk: {{ vmware_vm_manager_disk | default(omit) }}"
#           - "vmware_vm_manager_hardware: {{ vmware_vm_manager_hardware | default(omit) }}"
#           - "vmware_vm_manager_networks: {{ vmware_vm_manager_networks | mandatory }}"
#           - "vmware_vm_manager_force: {{ vmware_vm_manager_force | default(omit) }}"
#           - "vmware_vm_manager_convert: {{ vmware_vm_manager_convert | default(omit) }}"
#           - "vmware_vm_guest_id: {{ vmware_vm_guest_id if vmware_vm_guest_id is defined and vmware_vm_template is not defined else omit }}"
#           - "vmware_vm_manager_use_instance_uuid: {{ vmware_vm_manager_use_instance_uuid | default(omit) }}"
#           - "vmware_vm_manager_uuid: {{ vmware_vm_manager_uuid | default(omit) }}"
#           - "vmware_vm_manager_customization: {{ vmware_vm_manager_customization | default(omit) }}"
#           - "vmware_vm_manager_tag_names: {{ vmware_vm_manager_tag_names | default(omit) }}"

#     - name: "Pause to check vars before continue"
#       ansible.builtin.pause:

- name: "Include \"create_vm.yaml\" tasks"
  ansible.builtin.include_tasks: "create_vm.yaml"
  tags:
    - "create_vm"
  when:
    - vmware_vm_manager_state == "present" or
      vmware_vm_manager_state == "poweredon" or
      vmware_vm_manager_state == "powered-on"

- name: "Include \"create_tags.yaml\" tasks"
  ansible.builtin.include_tasks: "create_tags.yaml"
  tags:
    - "create_tags"
  when:
    - vmware_vm_manager_vm_tag_names
...
